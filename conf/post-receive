#!/bin/bash
# This script has been adapted wholesale from mislav's git-deploy
# https://github.com/mislav/git-deploy

set -e

#if [ "$GIT_DIR" = "." ]; then
  ## The script has been called as a hook; chdir to the working copy
  #cd ..
  #unset GIT_DIR
#fi

# try to obtain the usual system PATH
if [ -f /etc/profile ]; then
  PATH=$(source /etc/profile; echo $PATH)
  export PATH
fi

# get the current branch
head="$(git symbolic-ref HEAD)"

# read the STDIN to detect if this push changed the current branch
while read oldrev newrev refname
do
  [ "$refname" = "$head" ] && break
done

# abort if there's no update, or in case the branch is deleted
if [ -z "${newrev//0}" ]; then
  exit
fi

# check out the latest code into the working copy
root=/srv/http/mkaito.com
umask 002
rm -rf $root/*
git archive "$head" | tar -x -m -C "$root"
cd "$root"
/home/chris/.gem/ruby/1.9.1/bin/bundle install --deployment --quiet
bundle exec jekyll ./html

#git reset --hard

#logfile=log/deploy.log
#restart=tmp/restart.txt

#if [ -z "${oldrev//0}" ]; then
  ## this is the first push; this branch was just created
  #mkdir -p log tmp
  #chmod 0775 log tmp
  #touch $logfile $restart
  #chmod 0664 $logfile $restart

  ## init submodules
  #git submodule update --init | tee -a $logfile
#else
  ## log timestamp
  #echo ==== $(date) ==== >> $logfile

  ## execute the deploy hook in background
  #[ -x deploy/after_push ] && nohup deploy/after_push $oldrev $newrev 1>>$logfile 2>>$logfile &
#fi

# Re-deploy
#root = "/srv/http/mkaito.com/"

#commands = []
#commands << "umask 002"
#commands << "rm -rf #{root}/html/*"
#commands << "git archive #{head} | tar -x -m -C #{root}"
#commands << "cd #{root}"
#commands << "echo Installing bundle"
#commands << "bundle install --deployment --quiet"
#commands >> "bundle exec jekyll #{root}/html"
#system commands.join(" && ")

# vim:ft=sh
